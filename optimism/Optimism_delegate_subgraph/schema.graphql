type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes!      # Changed from String to Bytes
  spender: Bytes!    # Changed from String to Bytes
  value: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Account @entity {
  id: ID!
  balance: BigInt!
  delegate: Bytes!   # Changed from String to Bytes
}

type Delegate @entity {
  id: ID!
  latestBalance: BigInt!
  blockTimestamp: BigInt!
  delegatedFromCount: BigInt!
  delegators: [Bytes!]   # Made nullable at array level
}

type DelegateChanged @entity(immutable: true) {
  id: ID!
  delegator: Bytes!    # Changed from String to Bytes
  fromDelegate: Bytes! # Changed from String to Bytes
  toDelegate: Bytes!   # Changed from String to Bytes
  newBalance: BigInt
  balanceBlockTimestamp: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DelegateVotesChanged @entity(immutable: true) {
  id: ID!
  delegate: Bytes!     # Changed from String to Bytes
  previousBalance: BigInt!
  newBalance: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes!
  newOwner: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes!        # Changed from String to Bytes
  to: Bytes!          # Changed from String to Bytes
  value: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}